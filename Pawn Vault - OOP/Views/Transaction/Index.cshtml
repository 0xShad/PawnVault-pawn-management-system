@using System.Globalization
@{
    ViewData["Title"] = "Transactions";
    var payments = ViewBag.Payments as IEnumerable<dynamic>;
}

<div class="px-6 py-4 min-h-screen">
    <div class="flex items-center justify-between mb-1">
        <h1 class="text-3xl font-bold text-gray-900">Transactions</h1>
        <a asp-action="Create" class="flex items-center gap-2 bg-black hover:bg-gray-800 text-white font-semibold px-5 py-2 rounded-lg shadow transition">
            <span class="text-xl leading-none">+</span> Add Transaction
        </a>
    </div>
    <p class="text-gray-500 mb-8">Manage all pawnshop transactions and their statuses.</p>

    <div class="bg-white rounded-xl shadow p-6">
        <div class="mb-4">
            <h2 class="text-xl font-semibold text-gray-900">Transaction List</h2>
            <p class="text-gray-500">@((payments != null ? payments.Count() : 0)) transactions found</p>
        </div>
        <div>
            <table class="min-w-full divide-y divide-gray-200">
                <thead>
                    <tr>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Transaction ID</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Date</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Type</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Customer</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Item</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Amount</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Actions</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-100">
                    @if (payments != null)
                    {
                        foreach (var p in payments)
                        {
                            <tr>
                                <td class="px-4 py-3 font-semibold text-gray-900">@p.PaymentID</td>
                                <td class="px-4 py-3">@((p.PaymentDate as DateTime?).Value.ToString("yyyy-MM-dd"))</td>
                                <td class="px-4 py-3">
                                    <span class="inline-block px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-700">@p.TransactionType</span>
                                </td>
                                <td class="px-4 py-3">@p.CustomerName</td>
                                <td class="px-4 py-3">@p.ItemName</td>
                                <td class="px-4 py-3">@p.Amount.ToString("C", CultureInfo.CurrentCulture)</td>
                                <td class="px-4 py-3">
                                    <span class="inline-block px-2 py-1 text-xs rounded-full
                                        @(p.Status == "Active" ? "bg-green-100 text-green-700" : p.Status == "Forfeited" ? "bg-red-100 text-red-700" : p.Status == "Paid" ? "bg-blue-100 text-blue-700" : "bg-gray-100 text-gray-700")">
                                        @p.Status
                                    </span>
                                </td>
                                <td class="px-4 py-3 text-center relative">
                                    <button class="text-gray-700 hover:text-gray-900 focus:outline-none" onclick="toggleMenu('menu-@p.PaymentID')">
                                        <i class="fas fa-ellipsis-v"></i>
                                    </button>
                                    <div id="menu-@p.PaymentID" class="hidden absolute right-0 mt-2 w-40 bg-white rounded-lg shadow-lg py-2 z-50">
                                        <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 text-left" asp-controller="Transaction" asp-action="ViewTransaction" asp-route-id="@p.PaymentID">
                                            <i class="fas fa-eye mr-2"></i>View
                                        </a>
                                        <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 text-left" asp-controller="Transaction" asp-action="EditTransaction" asp-route-id="@p.PaymentID">
                                            <i class="fas fa-edit mr-2"></i>Edit
                                        </a>
                                        <button type="button" onclick="deleteTransaction(@p.PaymentID)" class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-gray-100">
                                            <i class="fas fa-trash-alt mr-2"></i>Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="8" class="text-center">No transactions found.</td></tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@{
    ViewData["Message"] = "Are you sure you want to delete this transaction? This action cannot be undone.";
    ViewData["DeleteUrl"] = "/Transaction/Delete/";
    ViewData["ModalId"] = "deleteModal";
}
@await Html.PartialAsync("_DeleteModal")

@section Scripts {
    <script>
        function toggleMenu(menuId) {
            const menu = document.getElementById(menuId);
            const allMenus = document.querySelectorAll('[id^="menu-"]');
            allMenus.forEach(m => {
                if (m.id !== menuId) {
                    m.classList.add('hidden');
                }
            });
            menu.classList.toggle('hidden');
        }
        document.addEventListener('click', function(event) {
            const menus = document.querySelectorAll('[id^="menu-"]');
            const isClickInsideMenu = Array.from(menus).some(menu => menu.contains(event.target));
            const isClickOnButton = event.target.closest('button');
            if (!isClickInsideMenu && !isClickOnButton) {
                menus.forEach(menu => menu.classList.add('hidden'));
            }
        });
        function deleteTransaction(transactionId) {
            const deleteUrl = `/Transaction/Delete/${transactionId}`;
            document.querySelector('#deleteModal button[onclick^="confirmDelete"]').setAttribute('onclick', `confirmDelete('${deleteUrl}')`);
            showDeleteModal('deleteModal');
        }
    </script>
}
