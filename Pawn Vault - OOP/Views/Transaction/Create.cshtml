@{
    ViewData["Title"] = "Add Transaction";
}

<div class="p-5">
    <!-- Header -->
    <div class="flex justify-between items-center mb-5 relative">
        <h2 class="flex items-center text-2xl font-bold">
            <span class="w-1 h-7 bg-[#D4AF37] mr-2"></span>Add New Transaction
        </h2>
    </div>

    <!-- Transaction Form -->
    <div class="bg-white rounded-xl shadow-md p-6">
        <form id="transactionForm" class="space-y-6">
            <!-- Loan Selection -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label for="loanId" class="block text-sm font-medium text-gray-700 mb-1">Loan ID</label>
                    <select id="loanId" name="loanId" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#002B5B] focus:border-[#002B5B]">
                        <option value="">Select a loan</option>
                        <option value="LOAN-001">LOAN-001 - John Doe (Gold Ring)</option>
                        <option value="LOAN-002">LOAN-002 - Jane Smith (Diamond Necklace)</option>
                        <option value="LOAN-003">LOAN-003 - Mike Johnson (Watch)</option>
                    </select>
                </div>

                <div>
                    <label for="transactionType" class="block text-sm font-medium text-gray-700 mb-1">Transaction Type</label>
                    <select id="transactionType" name="transactionType" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#002B5B] focus:border-[#002B5B]">
                        <option value="">Select type</option>
                        <option value="payment">Payment</option>
                        <option value="interest">Interest Payment</option>
                        <option value="redemption">Redemption</option>
                        <option value="forfeit">Forfeit</option>
                    </select>
                </div>
            </div>

            <!-- Amount and Date -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label for="amount" class="block text-sm font-medium text-gray-700 mb-1">Amount</label>
                    <div class="relative">
                        <span class="absolute left-3 top-2 text-gray-500">$</span>
                        <input type="number" id="amount" name="amount" step="0.01" class="w-full pl-8 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#002B5B] focus:border-[#002B5B]" placeholder="0.00">
                    </div>
                </div>

                <div>
                    <label for="transactionDate" class="block text-sm font-medium text-gray-700 mb-1">Transaction Date</label>
                    <input type="date" id="transactionDate" name="transactionDate" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#002B5B] focus:border-[#002B5B]" value="@DateTime.Now.ToString("yyyy-MM-dd")">
                </div>
            </div>

            <!-- Notes -->
            <div>
                <label for="notes" class="block text-sm font-medium text-gray-700 mb-1">Notes</label>
                <textarea id="notes" name="notes" rows="3" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#002B5B] focus:border-[#002B5B]" placeholder="Add any additional notes here..."></textarea>
            </div>

            <!-- Action Buttons -->
            <div class="flex justify-end space-x-4">
                <a href="/Transaction" class="px-6 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition">
                    Cancel
                </a>
                <button type="submit" class="px-6 py-2 bg-[#002B5B] text-white rounded-lg hover:bg-[#003c7c] transition">
                    Save Transaction
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('transactionForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Get form data
            const formData = {
                loanId: document.getElementById('loanId').value,
                transactionType: document.getElementById('transactionType').value,
                amount: document.getElementById('amount').value,
                transactionDate: document.getElementById('transactionDate').value,
                notes: document.getElementById('notes').value
            };

            // Here you would typically send this data to your backend
            console.log('Transaction data:', formData);
            
            // For now, just redirect back to transactions list
            window.location.href = '/Transaction';
        });

        // Update amount placeholder based on transaction type
        document.getElementById('transactionType').addEventListener('change', function(e) {
            const amountInput = document.getElementById('amount');
            switch(e.target.value) {
                case 'payment':
                    amountInput.placeholder = 'Enter payment amount';
                    break;
                case 'interest':
                    amountInput.placeholder = 'Enter interest amount';
                    break;
                case 'redemption':
                    amountInput.placeholder = 'Enter redemption amount';
                    break;
                case 'forfeit':
                    amountInput.placeholder = 'Enter forfeit amount';
                    break;
                default:
                    amountInput.placeholder = '0.00';
            }
        });
    </script>
} 