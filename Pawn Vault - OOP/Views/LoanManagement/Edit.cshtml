@model Pawn_Vault___OOP.Models.Loan
@using Pawn_Vault___OOP.Models

@* Tailwind CSS CDN for standalone page (remove if already included globally) *@
<script src="https://cdn.tailwindcss.com"></script>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
<style>
    body { font-family: 'Inter', sans-serif; background-color: #f4f5f7; }
    .info-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1rem 2rem; }
    .info-item p { margin-bottom: 0.25rem; }
</style>

<div class="max-w-4xl mx-auto bg-white rounded-lg shadow-md p-6 sm:p-8 lg:p-10 mt-8">
    @using (Html.BeginForm("Edit", "LoanManagement", new { id = Model.LoanID }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.LoanID)
        @Html.HiddenFor(m => m.UserId)
        @Html.HiddenFor(m => m.TransactionCode)
        @Html.HiddenFor(m => m.Status)
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 border-b pb-4">
            <h1 class="text-2xl sm:text-3xl font-semibold text-gray-800 mb-4 sm:mb-0">Edit Loan</h1>
            <button type="button" onclick="window.location.href='/LoanManagement'" class="flex items-center bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 px-4 rounded-md transition duration-300 ease-in-out shadow-sm">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
                Back to Loans
            </button>
        </div>

        <!-- Loan Information Section -->
        <div class="mb-8">
            <h2 class="text-xl sm:text-2xl font-semibold text-gray-800 mb-4">Loan Information</h2>
            <div class="info-grid">
                <div class="info-item">
                    <p class="text-gray-500 text-sm">Loan ID</p>
                    <p class="text-gray-900 font-medium">@Model.LoanID</p>
                </div>
                <div class="info-item">
                    <p class="text-gray-500 text-sm">Status</p>
                    <p class="text-gray-900 font-medium">@Model.Status</p>
                </div>
                <div class="info-item">
                    <label asp-for="Amount" class="text-gray-500 text-sm">Amount</label>
                    @Html.TextBoxFor(m => m.Amount, new { type = "number", step = "0.01", @class = "text-gray-900 font-medium w-full border border-gray-300 rounded-lg py-2 px-4" })
                    @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-red-500 text-sm" })
                </div>
                <div class="info-item">
                    <label asp-for="InterestRate" class="text-gray-500 text-sm">Interest Rate</label>
                    @Html.TextBoxFor(m => m.InterestRate, new { type = "number", step = "0.01", @class = "text-gray-900 font-medium w-full border border-gray-300 rounded-lg py-2 px-4" })
                    @Html.ValidationMessageFor(m => m.InterestRate, "", new { @class = "text-red-500 text-sm" })
                </div>
                <div class="info-item">
                    <label asp-for="IssuedDate" class="text-gray-500 text-sm">Date Created</label>
                    @Html.HiddenFor(m => m.IssuedDate)
                    <input type="text" value="@Model.IssuedDate.ToString("MMMM dd, yyyy")" class="text-gray-900 font-medium w-full border border-gray-300 rounded-lg py-2 px-4 bg-gray-100" readonly />
                    @Html.ValidationMessageFor(m => m.IssuedDate, "", new { @class = "text-red-500 text-sm" })
                </div>
                <div class="info-item">
                    <label asp-for="DueDate" class="text-gray-500 text-sm">Due Date</label>
                    @Html.TextBoxFor(m => m.DueDate, new { type = "date", @class = "text-gray-900 font-medium w-full border border-gray-300 rounded-lg py-2 px-4" })
                    @Html.ValidationMessageFor(m => m.DueDate, "", new { @class = "text-red-500 text-sm" })
                </div>
            </div>
        </div>

        <!-- Customer Information Section -->
        <div class="mb-8">
            <h2 class="text-xl sm:text-2xl font-semibold text-gray-800 mb-4">Customer Information</h2>
            <div class="info-grid">
                <div class="info-item">
                    <label asp-for="CustomerID" class="text-gray-500 text-sm">Customer</label>
                    @Html.HiddenFor(m => m.CustomerID)
                    @Html.DropDownListFor(m => m.CustomerID, (SelectList)ViewBag.Customers, "-- Select Customer --", new { @class = "text-gray-900 font-medium w-full border border-gray-300 rounded-lg py-2 px-4 bg-gray-100", @disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.CustomerID, "", new { @class = "text-red-500 text-sm" })
                </div>
            </div>
        </div>

        <!-- Item Information Section -->
        <div class="mb-8">
            <h2 class="text-xl sm:text-2xl font-semibold text-gray-800 mb-4">Item Information</h2>
            <div class="info-grid">
                <div class="info-item">
                    <label asp-for="ItemName" class="text-gray-500 text-sm">Item Name</label>
                    @Html.TextBoxFor(m => m.ItemName, new { @class = "text-gray-900 font-medium w-full border border-gray-300 rounded-lg py-2 px-4" })
                    @Html.ValidationMessageFor(m => m.ItemName, "", new { @class = "text-red-500 text-sm" })
                </div>
                <div class="info-item">
                    <label asp-for="Description" class="text-gray-500 text-sm">Description</label>
                    @Html.TextBoxFor(m => m.Description, new { @class = "text-gray-900 font-medium w-full border border-gray-300 rounded-lg py-2 px-4" })
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-red-500 text-sm" })
                </div>
                <div class="info-item">
                    <label asp-for="Category" class="text-gray-500 text-sm">Category</label>
                    @Html.DropDownListFor(m => m.Category, new SelectList(new[] { "Watch", "Jewelry", "Electronics", "Gold", "Other" }, Model.Category), "-- Select Category --", new { @class = "text-gray-900 font-medium w-full border border-gray-300 rounded-lg py-2 px-4" })
                    @Html.ValidationMessageFor(m => m.Category, "", new { @class = "text-red-500 text-sm" })
                </div>
                <div class="info-item">
                    <label asp-for="Condition" class="text-gray-500 text-sm">Condition</label>
                    @Html.DropDownListFor(m => m.Condition, new SelectList(new[] { "Excellent", "Good", "Fair", "Poor" }, Model.Condition), "-- Select Condition --", new { @class = "text-gray-900 font-medium w-full border border-gray-300 rounded-lg py-2 px-4" })
                    @Html.ValidationMessageFor(m => m.Condition, "", new { @class = "text-red-500 text-sm" })
                </div>
                <div class="info-item">
                    <label asp-for="EstimatedValue" class="text-gray-500 text-sm">Estimated Value</label>
                    @Html.TextBoxFor(m => m.EstimatedValue, new { type = "number", step = "0.01", @class = "text-gray-900 font-medium w-full border border-gray-300 rounded-lg py-2 px-4" })
                    @Html.ValidationMessageFor(m => m.EstimatedValue, "", new { @class = "text-red-500 text-sm" })
                </div>
            </div>
        </div>

        <div class="flex justify-end gap-4 pt-6 border-t">
            <button type="submit" class="flex items-center bg-black hover:bg-gray-800 text-white font-medium py-2 px-4 rounded-md transition duration-300 ease-in-out shadow-md">
                Save Changes
            </button>
        </div>
    }
</div>