@* Loan Management Main Page *@
@using Pawn_Vault___OOP.Data

<div class="h-screen">
    <div class="flex items-center justify-between px-6 py-4">
        <div>
            <h1 class="text-3xl font-bold text-gray-900">Loans</h1>
            <p class="text-gray-500">Manage pawn loans and track payments</p>
        </div>
        <button type="button" onclick="showCustomerTypeModal()" class="flex items-center gap-2 bg-gray-900 hover:bg-gray-800 text-white px-5 py-2 rounded-lg text-sm font-semibold shadow transition">
            <span class="text-xl leading-none">+</span> New Loan
        </button>
    </div>

    <div class="bg-white rounded-2xl shadow p-8">
        <h2 class="text-2xl font-semibold text-gray-900 mb-1">Loan Overview</h2>
        <p class="text-gray-500 mb-6">Filter and search through all loans</p>
        <div class="flex flex-col md:flex-row md:items-center gap-4 mb-6">
            <div class="relative flex-1">
                <input type="text" placeholder="Search by customer name, loan ID, or item..." class="w-full border border-gray-300 rounded-lg py-2 pl-10 pr-4 focus:outline-none focus:ring-2 focus:ring-gray-900 focus:border-gray-900" />
                <svg class="absolute left-3 top-2.5 h-5 w-5 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><circle cx="11" cy="11" r="8" /><path d="M21 21l-4.35-4.35" /></svg>
            </div>
            <select class="border border-gray-300 rounded-lg py-2 px-4 focus:outline-none focus:ring-2 focus:ring-gray-900 focus:border-gray-900 min-w-[150px]">
                <option>All Status</option>
                <option>Active</option>
                <option>Overdue</option>
                <option>Paid</option>
            </select>
        </div>
        <div>
            <table class="min-w-full bg-white rounded-lg">
                <thead>
                    <tr class="text-gray-500 text-sm">
                        <th class="px-6 py-3 text-left font-medium">Loan ID</th>
                        <th class="px-6 py-3 text-left font-medium">Customer</th>
                        <th class="px-6 py-3 text-left font-medium">Item</th>
                        <th class="px-6 py-3 text-left font-medium">Amount</th>
                        <th class="px-6 py-3 text-left font-medium">Interest Rate</th>
                        <th class="px-6 py-3 text-left font-medium">Due Date</th>
                        <th class="px-6 py-3 text-left font-medium">Status</th>
                        <th class="px-6 py-3 text-left font-medium">Actions</th>
                    </tr>
                </thead>
                <!-- Displaying all loans from database --> 
                <tbody class="text-gray-900 text-sm">
					@foreach (var loan in Model)
                    {
                        <tr class="">
                            <td class="px-6 py-4">@loan.Id</td>
                            <td class="px-6 py-4">@($"{loan.Customer?.CustomerFN} {loan.Customer?.CustomerLN}")</td>
                            <td class="px-6 py-4">@loan.ItemName</td>
                            <td class="px-6 py-4 font-semibold">@loan.Amount</td>
                            <td class="px-6 py-4">@loan.InterestRate.ToString("N2")%</td>
                            <td class="px-6 py-4 flex items-center gap-2"><svg class="w-4 h-4 text-gray-400 inline-block" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="3" y="4" width="18" height="18" rx="2"/><path d="M16 2v4M8 2v4M3 10h18"/></svg>@loan.RetentionPeriod.ToString("MMMM/dd/yyyy")</td>
                            <!-- conditional placing of status design -->
                            <td class="px-6 py-4">
                                @if (loan.Status == "Active")
                                {
                                    <span class="bg-green-100 text-green-700 px-3 py-1 rounded-full text-xs font-semibold">Active</span>
                                }
                                else if (loan.Status == "Overdue")
                                {
                                    <span class="bg-red-100 text-red-600 px-3 py-1 rounded-full text-xs font-semibold">Overdue</span>
                                }
                                else
                                {
                                    <span class="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-xs font-semibold">Paid</span>
                                }
                            </td>

                            <td class="px-6 py-4 text-center relative">
                                <button class="text-gray-700 hover:text-gray-900 focus:outline-none" onclick="toggleMenu('menu-@loan.Id')">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <div id="menu-@loan.Id" class="hidden absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-50">
                                    <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 text-left" asp-action="ViewLoan" asp-route-id="@loan.Id">
                                        <i class="fas fa-eye mr-2"></i>View
                                    </a>
                                    <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 text-left" asp-action="Edit" asp-route-id="@loan.Id">
                                        <i class="fas fa-edit mr-2"></i>Edit
                                    </a>
                                    <button onclick="deleteLoan('@loan.Id')" class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-gray-100">
                                        <i class="fas fa-trash-alt mr-2"></i>Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
            </tbody>
        </table>
    </div>
</div>

<!-- Customer Type Modal -->
<div id="customerTypeModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 hidden">
    <div class="bg-white rounded-lg shadow-lg p-8 w-full max-w-sm">
        <h3 class="text-lg font-semibold mb-4">Select Customer Type</h3>
        <div class="flex flex-col gap-4">
            <button onclick="proceedToCreate('new')" class="bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg font-semibold">New Customer</button>
            <button onclick="proceedToCreate('existing')" class="bg-gray-600 hover:bg-gray-700 text-white py-2 rounded-lg font-semibold">Existing Customer</button>
        </div>
        <button onclick="closeCustomerTypeModal()" class="mt-6 text-gray-500 hover:text-gray-700 text-sm">Cancel</button>
    </div>
</div>

@{
    ViewData["Title"] = "Delete Loan";
    ViewData["Message"] = "Are you sure you want to delete this loan? This action cannot be undone.";
    ViewData["DeleteUrl"] = "/LoanManagement/Delete/";
}
@await Html.PartialAsync("_DeleteModal")

@section Scripts {
    <script>
        function toggleMenu(menuId) {
            const menu = document.getElementById(menuId);
            const allMenus = document.querySelectorAll('[id^="menu-"]');
            
            // Close all other menus
            allMenus.forEach(m => {
                if (m.id !== menuId) {
                    m.classList.add('hidden');
                }
            });
            
            // Toggle the clicked menu
            menu.classList.toggle('hidden');
        }

        // Close menus when clicking outside
        document.addEventListener('click', function(event) {
            const menus = document.querySelectorAll('[id^="menu-"]');
            const isClickInsideMenu = Array.from(menus).some(menu => menu.contains(event.target));
            const isClickOnButton = event.target.closest('button');
            
            if (!isClickInsideMenu && !isClickOnButton) {
                menus.forEach(menu => menu.classList.add('hidden'));
            }
        });

        function deleteLoan(loanId) {
            const deleteUrl = `/LoanManagement/Delete/${loanId}`;
            document.querySelector('#deleteModal button[onclick^="confirmDelete"]').setAttribute('onclick', `confirmDelete('${deleteUrl}')`);
            showDeleteModal('deleteModal');
        }

        function showCustomerTypeModal() {
            document.getElementById('customerTypeModal').classList.remove('hidden');
        }
        function closeCustomerTypeModal() {
            document.getElementById('customerTypeModal').classList.add('hidden');
        }
        function proceedToCreate(type) {
            window.location.href = `/LoanManagement/Create?customerType=${type}`;
        }
        // Close modal when clicking outside
        document.addEventListener('mousedown', function(event) {
            const modal = document.getElementById('customerTypeModal');
            if (!modal.classList.contains('hidden')) {
                const modalContent = modal.querySelector('div');
                if (!modalContent.contains(event.target) && event.target !== modal) {
                    closeCustomerTypeModal();
                }
            }
        });
    </script>
}